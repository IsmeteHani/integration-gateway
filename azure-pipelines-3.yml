# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  BACKEND_DIR: '.'
  FRONTEND_DIR: 'ui-react'
  ARTIFACT_NAME_BACKEND: 'backend-jar'
  ARTIFACT_NAME_FRONTEND: 'frontend-dist'

stages:
- stage: Build
  displayName: Build frontend & backend
  jobs:

  - job: backend
    displayName: Build backend (Spring Boot)
    steps:
      - checkout: self
        fetchDepth: 0

      # KJO është forma e saktë në Azure DevOps
      - task: JavaToolInstaller@0
        displayName: 'Use Java 21 (Preinstalled)'
        inputs:
          versionSpec: '21'
          jdkArchitectureOption: 'x64'
          jdkSourceOption: 'PreInstalled'

      - script: |
          java -version
          mvn -v
        displayName: 'Verify Java & Maven'

      - task: Cache@2
        displayName: Cache Maven
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          restoreKeys: |
            maven | "$(Agent.OS)"
          path: $(HOME)/.m2/repository

      - script: |
          cd $(BACKEND_DIR)
          mvn -B -ntp -DskipTests clean package
        displayName: 'Maven package'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish backend artifact'
        inputs:
          PathtoPublish: '$(BACKEND_DIR)/target'
          ArtifactName: '$(ARTIFACT_NAME_BACKEND)'
          publishLocation: 'Container'

  - job: frontend
    displayName: Build frontend (Vite/React)
    steps:
      - checkout: self
        fetchDepth: 0

      - task: NodeTool@0
        displayName: 'Use Node 20.x'
        inputs:
          versionSpec: '20.x'

      - task: Cache@2
        displayName: Cache NPM
        inputs:
          key: 'npm | "$(Agent.OS)" | $(FRONTEND_DIR)/package-lock.json'
          restoreKeys: |
            npm | "$(Agent.OS)"
          path: '$(FRONTEND_DIR)/node_modules'

      - script: |
          cd $(FRONTEND_DIR)
          npm ci
          npm run build
        displayName: 'npm ci && npm run build'

      - task: PublishBuildArtifacts@1
        displayName: 'Publish frontend artifact'
        inputs:
          PathtoPublish: '$(FRONTEND_DIR)/dist'
          ArtifactName: '$(ARTIFACT_NAME_FRONTEND)'
          publishLocation: 'Container'
