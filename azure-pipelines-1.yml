# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  BACKEND_DIR: ''
  UI_DIR: 'ui-react'
  JAVA_VERSION: '21'
  NODE_VERSION: '20.x'

stages:
- stage: Build
  displayName: Build all
  jobs:
  - job: backend
    displayName: "Build backend (Spring Boot - Gradle)"
    steps:
    - checkout: self
      fetchDepth: 0

    # Java 21
    - task: UseJavaVersion@1
      inputs:
        versionSpec: '$(JAVA_VERSION)'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    # Cache Gradle
    - task: Cache@2
      inputs:
        key: 'gradle | "$(Agent.OS)" | **/*.gradle* | **/gradle-wrapper.properties'
        path: ~/.gradle
        restoreKeys: 'gradle | "$(Agent.OS)"'
      displayName: Cache Gradle

    # Gradle build (prod jar)
    - script: |
        cd $(BACKEND_DIR)
        chmod +x ./gradlew || true
        ./gradlew clean build -x test
      displayName: Gradle build

    # Publish backend artifact (jar/tar)
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(BACKEND_DIR)build/libs'
        artifactName: 'backend'
        publishLocation: 'Container'
      displayName: Publish backend artifact

  - job: frontend
    displayName: "Build frontend (ui-react)"
    steps:
    - checkout: self
      fetchDepth: 0

    # Node 20
    - task: NodeTool@0
      inputs:
        versionSpec: '$(NODE_VERSION)'
      displayName: Use Node $(NODE_VERSION)

    # Cache npm
    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | $(UI_DIR)/package-lock.json'
        path: $(UI_DIR)/.npm
        cacheHitVar: 'npmCacheRestored'
      displayName: Cache npm (lockfile)

    - script: |
        cd $(UI_DIR)
        npm ci
        # (e shtove tashmë) sigurim që lightningcss ekziston në CI
        npm ls lightningcss || npm install -D lightningcss
        npm run build
      displayName: npm ci && build

    # Publiko dist
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(UI_DIR)/dist'
        artifactName: 'frontend'
        publishLocation: 'Container'
      displayName: Publish frontend artifact
