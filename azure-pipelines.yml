# CI për integration-gateway (Java 21 + Gradle) dhe ui-react (Node 20 + Vite)
trigger:
- main

pr:
- main

variables:
  JAVA_VERSION: '21'
  NODE_VERSION: '20'

pool:
  vmImage: 'ubuntu-latest'

stages:
# ===================== BUILD =====================
- stage: Build
  displayName: Build & Publish artifacts
  jobs:
  # ------- Backend (Spring Boot) -------
  - job: backend
    displayName: Build backend (Spring Boot)
    steps:
    - checkout: self
      fetchDepth: 0

    - task: JavaToolInstaller@0
      displayName: "Use Java $(JAVA_VERSION)"
      inputs:
        versionSpec: '$(JAVA_VERSION)'
        jdkArchitectureOption: 'x64'
        jdkSourceOption: 'PreInstalled'

    - task: Cache@2
      displayName: Cache Gradle
      inputs:
        key: 'gradle | "$(Agent.OS)" | **/gradle-wrapper.properties, **/build.gradle, **/settings.gradle'
        path: ~/.gradle/caches
        restoreKeys: |
          gradle | "$(Agent.OS)"

    - script: |
        chmod +x ./gradlew
        ./gradlew clean build -x test
      displayName: Gradle build

    - task: PublishBuildArtifacts@1
      displayName: "Publish backend JAR"
      inputs:
        PathtoPublish: 'build/libs'
        ArtifactName: 'backend'
        publishLocation: 'Container'

  # ------- Frontend (ui-react / Vite) -------
  - job: frontend
    displayName: Build frontend (ui-react)
    steps:
    - checkout: self
      fetchDepth: 0

    - task: NodeTool@0
      displayName: "Use Node $(NODE_VERSION)"
      inputs:
        versionSpec: '$(NODE_VERSION)'

    - script: |
        cd ui-react
        npm ci
        npm run build
      displayName: npm ci && build

    - task: PublishBuildArtifacts@1
      displayName: "Publish UI static files"
      inputs:
        PathtoPublish: 'ui-react/dist'
        ArtifactName: 'ui'
        publishLocation: 'Container'

# ===================== (OPSIONALE) DEPLOY =====================
# Hiqe komentet nëse ke krijuar Azure Web App dhe service connection.
# - stage: Deploy
#   displayName: Deploy to Azure Web App
#   dependsOn: Build
#   condition: succeeded()
#   variables:
#     AZURE_SERVICE_CONNECTION: 'YOUR-SC-NAME'   # Project Settings > Service connections
#     WEBAPP_NAME: 'your-webapp-name'            # Emri i App Service
#   jobs:
#   - deployment: web
#     environment: 'dev'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: AzureWebApp@1
#             displayName: "Deploy Spring Boot JAR"
#             inputs:
#               azureSubscription: '$(AZURE_SERVICE_CONNECTION)'
#               appName: '$(WEBAPP_NAME)'
#               package: '$(Pipeline.Workspace)/backend/*.jar'
#               appType: 'webAppLinux'
#               runtimeStack: 'JAVA|21-java21'
#               startupCommand: 'java -jar /home/site/wwwroot/*.jar'
