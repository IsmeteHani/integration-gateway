# azure-pipelines.yml
trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Ndrysho nëse ke strukturë tjetër
  BACKEND_DIR: '.'
  FRONTEND_DIR: 'ui-react'
  ARTIFACT_NAME_BACKEND: 'backend-jar'
  ARTIFACT_NAME_FRONTEND: 'frontend-dist'

stages:
# =========================
# Stage: Build
# =========================
- stage: Build
  displayName: Build frontend & backend
  jobs:

  # ---------- Backend (Maven) ----------
  - job: backend
    displayName: Build backend (Spring Boot)
    steps:
      - checkout: self
        fetchDepth: 0

      # Java 21 (task i saktë)
      - task: UseJavaVersion@1
        displayName: 'Use Java 21'
        inputs:
          versionSpec: '21'
          distribution: 'microsoft'

      # Cache për Maven
      - task: Cache@2
        displayName: Cache Maven
        inputs:
          key: 'maven | "$(Agent.OS)" | **/pom.xml'
          restoreKeys: |
            maven | "$(Agent.OS)"
          path: $(HOME)/.m2/repository

      # Build pa teste (ndrysho nëse do t’i ekzekutosh)
      - script: |
          cd $(BACKEND_DIR)
          mvn -B -ntp -DskipTests clean package
        displayName: 'Maven package'

      # Publiko JAR-in si artifact
      - task: PublishBuildArtifacts@1
        displayName: 'Publish backend artifact'
        inputs:
          PathtoPublish: '$(BACKEND_DIR)/target'
          ArtifactName: '$(ARTIFACT_NAME_BACKEND)'
          publishLocation: 'Container'

  # ---------- Frontend (Vite/React) ----------
  - job: frontend
    displayName: Build frontend (Vite/React)
    steps:
      - checkout: self
        fetchDepth: 0

      # Node 20.x
      - task: NodeTool@0
        displayName: 'Use Node 20.x'
        inputs:
          versionSpec: '20.x'

      # Cache për node_modules sipas package-lock.json
      - task: Cache@2
        displayName: Cache NPM
        inputs:
          key: 'npm | "$(Agent.OS)" | $(FRONTEND_DIR)/package-lock.json'
          restoreKeys: |
            npm | "$(Agent.OS)"
          path: '$(FRONTEND_DIR)/node_modules'

      # Install + Build
      - script: |
          cd $(FRONTEND_DIR)
          npm ci
          npm run build
        displayName: 'npm ci && npm run build'

      # Publiko dist/ si artifact
      - task: PublishBuildArtifacts@1
        displayName: 'Publish frontend artifact'
        inputs:
          PathtoPublish: '$(FRONTEND_DIR)/dist'
          ArtifactName: '$(ARTIFACT_NAME_FRONTEND)'
          publishLocation: 'Container'
