# azure-pipelines.yml
trigger:
  - main

variables:
  UI_DIR: 'ui-react'

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build all
    jobs:

      # =========================
      # Backend (Spring Boot)
      # =========================
      - job: backend
        displayName: Build backend (Spring Boot)
        steps:
          - checkout: self

          # ✅ Forma e SAKTË e task-ut për Java
          - task: UseJava@1
            displayName: 'Use Java 21'
            inputs:
              distribution: 'Microsoft'     # ose 'Temurin'
              versionSpec: '21'

          # Cache për Gradle (opsionale por e dobishme)
          - task: Cache@2
            displayName: Cache Gradle
            inputs:
              key: 'gradle | "$(Agent.OS)" | **/gradle-wrapper.properties, **/build.gradle, **/settings.gradle'
              restoreKeys: |
                gradle | "$(Agent.OS)"
                gradle
              path: ~/.gradle/caches

          - script: chmod +x ./gradlew
            displayName: 'chmod gradlew'

          - script: ./gradlew clean bootJar -x test
            displayName: 'Gradle build (bootJar)'

          - publish: build/libs
            artifact: backend
            displayName: 'Publish backend artifact'

      # =========================
      # Frontend (ui-react)
      # =========================
      - job: frontend
        displayName: Build frontend (ui-react)
        steps:
          - checkout: self

          - task: NodeTool@0
            displayName: 'Use Node 20'
            inputs:
              versionSpec: '20.x'

          # Cache npm (opsionale)
          - task: Cache@2
            displayName: Cache npm
            inputs:
              key: 'npm | "$(Agent.OS)" | $(UI_DIR)/package-lock.json'
              restoreKeys: |
                npm | "$(Agent.OS)"
                npm
              path: $(Pipeline.Workspace)/.npm

          - script: |
              export npm_config_cache="$(Pipeline.Workspace)/.npm"
              cd $(UI_DIR)
              npm ci
              # Nëse build kërkon lightningcss, është në package.json -> devDependencies
              npm run build
            displayName: 'npm ci && build'

          - publish: $(UI_DIR)/dist
            artifact: frontend
            displayName: 'Publish frontend artifact'
